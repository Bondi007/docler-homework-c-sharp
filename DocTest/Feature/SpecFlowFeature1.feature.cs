// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace DocTest.Feature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Automated UI testing of http://uitest.duodecadits.com based on the given specific" +
        "ation", SourceFile="Feature\\SpecFlowFeature1.feature", SourceLine=0)]
    public partial class AutomatedUITestingOfHttpUitest_Duodecadits_ComBasedOnTheGivenSpecificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Automated UI testing of http://uitest.duodecadits.com based on the given specific" +
                    "ation", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("The user opens http://uitest.duodecadits.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC1 - Check logo and title - Form Page", new string[] {
                "DoclerTests"}, SourceLine=6)]
        public virtual void CTC1_CheckLogoAndTitle_FormPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC1 - Check logo and title - Form Page", new string[] {
                        "DoclerTests"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 8
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CTC2_CheckLogoAndTitle_FormPage_AfterSubmittingTheName(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DoclerTests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC2 - Check logo and title - Form Page - after submitting the name", @__tags);
#line 14
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 15
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And(string.Format("The user types \"{0}\" in the input box", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("The user clicks on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC2 - Check logo and title - Form Page - after submitting the name, Test", new string[] {
                "DoclerTests"}, SourceLine=22)]
        public virtual void CTC2_CheckLogoAndTitle_FormPage_AfterSubmittingTheName_Test()
        {
#line 14
this.CTC2_CheckLogoAndTitle_FormPage_AfterSubmittingTheName("Test", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC3 - Check logo and title - Home Page", new string[] {
                "DoclerTests"}, SourceLine=25)]
        public virtual void CTC3_CheckLogoAndTitle_HomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC3 - Check logo and title - Home Page", new string[] {
                        "DoclerTests"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 27
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC4 - Test UI Testing Page - Check if it navigates to Home page", new string[] {
                "DoclerTests"}, SourceLine=33)]
        public virtual void CTC4_TestUITestingPage_CheckIfItNavigatesToHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC4 - Test UI Testing Page - Check if it navigates to Home page", new string[] {
                        "DoclerTests"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 35
 testRunner.When("The user clicks on UI Testing button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC5 - Test Error Page", new string[] {
                "DoclerTests"}, SourceLine=38)]
        public virtual void CTC5_TestErrorPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC5 - Test Error Page", new string[] {
                        "DoclerTests"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 40
 testRunner.When("The user clicks on Error button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("The user is navigated to the Error page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.And("The user gets Error File not found message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC6 - Test Home Page - Check if Home menu turns to active status", new string[] {
                "DoclerTests"}, SourceLine=44)]
        public virtual void CTC6_TestHomePage_CheckIfHomeMenuTurnsToActiveStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC6 - Test Home Page - Check if Home menu turns to active status", new string[] {
                        "DoclerTests"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 46
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.And("Home menu turns to active status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC7 - Test Home Page - Check if the correct header and paragraph are displayed", new string[] {
                "DoclerTests"}, SourceLine=50)]
        public virtual void CTC7_TestHomePage_CheckIfTheCorrectHeaderAndParagraphAreDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC7 - Test Home Page - Check if the correct header and paragraph are displayed", new string[] {
                        "DoclerTests"});
#line 51
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 52
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
 testRunner.And("Correct Header and Paragraph is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC8 - Test Form Page - Check if Input box and Submit button are displayed", new string[] {
                "DoclerTests"}, SourceLine=56)]
        public virtual void CTC8_TestFormPage_CheckIfInputBoxAndSubmitButtonAreDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC8 - Test Form Page - Check if Input box and Submit button are displayed", new string[] {
                        "DoclerTests"});
#line 57
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 58
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.And("The input form and submit button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC9 - Test Form Page - Check if Form menu turns to active status", new string[] {
                "DoclerTests"}, SourceLine=62)]
        public virtual void CTC9_TestFormPage_CheckIfFormMenuTurnsToActiveStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC9 - Test Form Page - Check if Form menu turns to active status", new string[] {
                        "DoclerTests"});
#line 63
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 64
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
 testRunner.And("Form menu turns to active status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DoclerTests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC10 - Test Form Page - Test submitting different names", @__tags);
#line 69
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 70
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.And(string.Format("The user types \"{0}\" in the input box", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("The user clicks on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And(string.Format("Page displays Hello \"{0}\"! message", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC10 - Test Form Page - Test submitting different names, John", new string[] {
                "DoclerTests"}, SourceLine=76)]
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames_John()
        {
#line 69
 this.CTC10_TestFormPage_TestSubmittingDifferentNames("John", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC10 - Test Form Page - Test submitting different names, Sophia", new string[] {
                "DoclerTests"}, SourceLine=76)]
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames_Sophia()
        {
#line 69
 this.CTC10_TestFormPage_TestSubmittingDifferentNames("Sophia", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC10 - Test Form Page - Test submitting different names, Charlie", new string[] {
                "DoclerTests"}, SourceLine=76)]
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames_Charlie()
        {
#line 69
 this.CTC10_TestFormPage_TestSubmittingDifferentNames("Charlie", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("CTC10 - Test Form Page - Test submitting different names, Emily", new string[] {
                "DoclerTests"}, SourceLine=76)]
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames_Emily()
        {
#line 69
 this.CTC10_TestFormPage_TestSubmittingDifferentNames("Emily", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Automated UI testing of http://uitest.duodecadits.com based on the given specific" +
        "ation")]
    public partial class AutomatedUITestingOfHttpUitest_Duodecadits_ComBasedOnTheGivenSpecificationFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Automated UI testing of http://uitest.duodecadits.com based on the given specific" +
                    "ation", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
testRunner.Given("The user opens http://uitest.duodecadits.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC1 - Check logo and title - Form Page")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC1_CheckLogoAndTitle_FormPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC1 - Check logo and title - Form Page", new string[] {
                        "DoclerTests"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 8
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC2 - Check logo and title - Form Page - after submitting the name")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        [NUnit.Framework.TestCaseAttribute("Test", null)]
        public virtual void CTC2_CheckLogoAndTitle_FormPage_AfterSubmittingTheName(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DoclerTests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC2 - Check logo and title - Form Page - after submitting the name", @__tags);
#line 14
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 15
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And(string.Format("The user types \"{0}\" in the input box", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("The user clicks on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC3 - Check logo and title - Home Page")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC3_CheckLogoAndTitle_HomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC3 - Check logo and title - Home Page", new string[] {
                        "DoclerTests"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 27
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
 testRunner.And("Page title is UI Testing Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("Company logo is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC4 - Test UI Testing Page - Check if it navigates to Home page")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC4_TestUITestingPage_CheckIfItNavigatesToHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC4 - Test UI Testing Page - Check if it navigates to Home page", new string[] {
                        "DoclerTests"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 35
 testRunner.When("The user clicks on UI Testing button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC5 - Test Error Page")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC5_TestErrorPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC5 - Test Error Page", new string[] {
                        "DoclerTests"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 40
 testRunner.When("The user clicks on Error button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("The user is navigated to the Error page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
 testRunner.And("The user gets Error File not found message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC6 - Test Home Page - Check if Home menu turns to active status")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC6_TestHomePage_CheckIfHomeMenuTurnsToActiveStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC6 - Test Home Page - Check if Home menu turns to active status", new string[] {
                        "DoclerTests"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 46
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.And("Home menu turns to active status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC7 - Test Home Page - Check if the correct header and paragraph are displayed")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC7_TestHomePage_CheckIfTheCorrectHeaderAndParagraphAreDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC7 - Test Home Page - Check if the correct header and paragraph are displayed", new string[] {
                        "DoclerTests"});
#line 51
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 52
 testRunner.When("The user clicks on Home button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("The user is navigated to the Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
 testRunner.And("Correct Header and Paragraph is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC8 - Test Form Page - Check if Input box and Submit button are displayed")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC8_TestFormPage_CheckIfInputBoxAndSubmitButtonAreDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC8 - Test Form Page - Check if Input box and Submit button are displayed", new string[] {
                        "DoclerTests"});
#line 57
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 58
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.And("The input form and submit button is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC9 - Test Form Page - Check if Form menu turns to active status")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        public virtual void CTC9_TestFormPage_CheckIfFormMenuTurnsToActiveStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC9 - Test Form Page - Check if Form menu turns to active status", new string[] {
                        "DoclerTests"});
#line 63
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 64
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 66
 testRunner.And("Form menu turns to active status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CTC10 - Test Form Page - Test submitting different names")]
        [NUnit.Framework.CategoryAttribute("DoclerTests")]
        [NUnit.Framework.TestCaseAttribute("John", null)]
        [NUnit.Framework.TestCaseAttribute("Sophia", null)]
        [NUnit.Framework.TestCaseAttribute("Charlie", null)]
        [NUnit.Framework.TestCaseAttribute("Emily", null)]
        public virtual void CTC10_TestFormPage_TestSubmittingDifferentNames(string username, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DoclerTests"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CTC10 - Test Form Page - Test submitting different names", @__tags);
#line 69
 this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 70
 testRunner.When("The user clicks on Form button in the upper Menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.Then("The user is navigated to the Form page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 72
 testRunner.And(string.Format("The user types \"{0}\" in the input box", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("The user clicks on Submit button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And(string.Format("Page displays Hello \"{0}\"! message", username), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
